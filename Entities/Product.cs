//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AutozaphastiKulckov.Entities
{
    using System;
    using System.Collections.Generic;
    
    public partial class Product
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Product()
        {
            this.OrderComposition = new HashSet<OrderComposition>();
        }
    
        public string articul { get; set; }
        public string name { get; set; }
        public string description { get; set; }
        public decimal category { get; set; }
        public int max_discount { get; set; }
        public int CurrentDiscount { get; set; }
        public int IdManafacturer { get; set; }
        public int IdSupliener { get; set; }
        public int IdCategory { get; set; }
        public int Count_warehouse { get; set; }
        public string Descriptionsdf { get; set; }
        public string Photo { get; set; }
    
        public virtual Category Category1 { get; set; }
        public virtual Manafacturer Manafacturer { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<OrderComposition> OrderComposition { get; set; }
        public virtual Supliener Supliener { get; set; }

        public string Background
        {
            get
            {
                if (this.CurrentDiscount > 15)
                    return "#7fff00";
                return "#fff";
            }
        }

        public string CostWithDiscount
        {
            get
            {
                if (this.max_discount > 0)
                {
                    var costWithDiscount = Convert.ToDouble(this.category) - Convert.ToDouble(this.category) * Convert.ToDouble(this.CurrentDiscount / 100.00);
                    return costWithDiscount.ToString();
                }
                return this.category.ToString();
            }
        }

        public string ImgPath
        {
            get
            {
                var path = "pack://application,,,/Resources/" + this.Photo;
                return path;
            }
        }


    }
}
